@{
    ViewData["Title"] = "Home";
}

<div class="container">
    <div class="row">

        <!-- Repositories dropdown -->
        <div class="col-4">
            <select id="RepoInput">
                <option selected value="">Repository: </option>
            @foreach (Repository repo in ViewBag.Repositories)
            {
                <option value="@repo.Name">@repo.Name</option>
            }
            </select>
        </div>

        <!-- From datetime label -->
        <div class="col-1">
            <label for="FromInput">From: </label>
        </div>

        <!-- From datetime -->
        <div class="col-3">
            <div class="input-group date" id="datetimepickerFrom" data-target-input="nearest">
                <input type="text" id="FromInput" class="form-control datetimepicker-input" data-target="#datetimepickerFrom" />
                <div class="input-group-append" data-target="#datetimepickerFrom" data-toggle="datetimepicker">
                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                </div>
            </div>
        </div>

        <!-- To datetime label -->
        <div class="col-1">
            <label for="ToInput">To: </label>
        </div>

        <!-- To datetime -->
        <div class="col-3">
            <div class="input-group date" id="datetimepickerTo" data-target-input="nearest">
                <input type="text" id="ToInput" class="form-control datetimepicker-input" data-target="#datetimepickerTo" />
                <div class="input-group-append" data-target="#datetimepickerTo" data-toggle="datetimepicker">
                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                </div>
            </div>
        </div>

    </div>
</div>

<div class="container" id="Alerts">&nbsp;</div>

<div class="container-fluid" id="ResultsChartContainer">
    <canvas id="ResultsChart"></canvas>
</div>

@section Chart
{
    <script type="text/javascript">

@{
    string dateTimeFormat = "yyyy/MM/dd hh:mm:ss tt";
    DateTime now = DateTime.Now;
}

    var chart = CreateChart();

    $(function () {
        $('#datetimepickerFrom').datetimepicker({
            defaultDate: "@((now - TimeSpan.FromHours(2)).ToString(dateTimeFormat))",
        });

        $('#datetimepickerTo').datetimepicker({
            defaultDate: "@(now.ToString(dateTimeFormat))",
        });

        $('#datetimepickerFrom').on("change.datetimepicker", ({ date, oldDate }) => { GetPoints(); });
        $('#datetimepickerTo').on("change.datetimepicker", ({ date, oldDate }) => { GetPoints(); });

        $("#RepoInput").change(function () {
            if ($("#RepoInput").val() != "")
            {
                GetPoints();
            }
        });
    });

    function GetPoints() {

        var url = "@Url.Action("GetPoints", "Home")";

        var data = {
            "repositoryName": $("#RepoInput").val(),
            "from": $("#FromInput").val(),
            "to": $("#ToInput").val()
        };

        var success = function (result) {
            AddChartData(result);
        };

        var error = function (result) {
            AddAlert(result.status + ": " + result.statusText);
        };

        CallAjax(url, data, success, error);
    }

    </script>
} 